
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
public class information extends javax.swing.JFrame {
    static Connection connection=null;
    static String databasename="database";
    static String url= "jdbc:mysql://localhost/"+databasename+"?user="+databasename+"&password="+databasename+"&useUnicode=true&characterEncoding=UTF-8";
    //static String url="jdbc:mysql://localhost=3306/"+databasename;
    static String username="root";
    static String password="root";
    public information() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        std_id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        information = new javax.swing.JTable();
        show = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        admission = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        resulttable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        session_clearance = new javax.swing.JTable();
        home = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setText("ID");

        information.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Father name", "Address", "Mobile", "DOB"
            }
        ));
        jScrollPane1.setViewportView(information);

        show.setBackground(new java.awt.Color(0, 102, 0));
        show.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        show.setForeground(new java.awt.Color(153, 0, 0));
        show.setText("Show");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("Bangladesh Army International University of Science and Technology ");
        jLabel3.setBorder(new javax.swing.border.MatteBorder(null));

        admission.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Semester", "Year", "Department"
            }
        ));
        jScrollPane4.setViewportView(admission);

        resulttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Course code", "GPA", "Exam type"
            }
        ));
        jScrollPane6.setViewportView(resulttable);

        session_clearance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Level/Term", "Session fee", "Payment amount", "Status"
            }
        ));
        jScrollPane5.setViewportView(session_clearance);

        home.setBackground(new java.awt.Color(153, 0, 0));
        home.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        home.setForeground(new java.awt.Color(0, 102, 0));
        home.setText("Back home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(32, 32, 32)
                                        .addComponent(std_id, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(show)
                                    .addGap(182, 182, 182)
                                    .addComponent(home))))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(std_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show)
                    .addComponent(home)
                    .addComponent(jLabel2)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection=DriverManager.getConnection(url,username,password);
            Statement st=connection.createStatement();
            String s="select * from student where std_id=? and password=?";
            PreparedStatement p=connection.prepareStatement(s);
            p.setString(1,std_id.getText());
            p.setString(2,pass.getText());
            ResultSet r=p.executeQuery();
            if(r.next())
            {
                JOptionPane.showMessageDialog(null,"Id and password matched");
                String sql="select * from student where std_id="+std_id.getText();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String name=String.valueOf(rs.getString("std_name"));
                String fname=String.valueOf(rs.getString("f_name"));
                String Address=String.valueOf(rs.getString("address"));
                String contact=String.valueOf(rs.getString("contact_no"));
                String dofbirth=String.valueOf(rs.getString("date_of_birth"));
                String tbData[]={name,fname,Address,contact,dofbirth};
                DefaultTableModel model = (DefaultTableModel) information.getModel();
                model.addRow(tbData);
            }
            }
            else {
                JOptionPane.showMessageDialog(null,"Id and password not correct");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection=DriverManager.getConnection(url,username,password);
            Statement st=connection.createStatement();
            String s="select * from student where std_id=? and password=?";
            PreparedStatement p=connection.prepareStatement(s);
            p.setString(1,std_id.getText());
            p.setString(2,pass.getText());
            ResultSet r=p.executeQuery();
            if(r.next())
            {
                String sql="select * from admission_info where std_id="+std_id.getText();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String id=String.valueOf(rs.getString("std_id"));
                String Semester=String.valueOf(rs.getString("admitted_semester"));
                String YoA=String.valueOf(rs.getString("year_of_admission"));
                String DN=String.valueOf(rs.getString("dept_name"));
                String tbData[]={id,Semester,YoA,DN};
                DefaultTableModel model = (DefaultTableModel) admission.getModel();
                model.addRow(tbData);
            }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection=DriverManager.getConnection(url,username,password);
            Statement st=connection.createStatement();
            String s="select * from student where std_id=? and password=?";
            PreparedStatement p=connection.prepareStatement(s);
            p.setString(1,std_id.getText());
            p.setString(2,pass.getText());
            ResultSet r=p.executeQuery();
            if(r.next())
            {
                String sql="select * from result where std_id="+std_id.getText();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String id=String.valueOf(rs.getString("std_id"));
                String CC=String.valueOf(rs.getString("course_code"));
                String GPA=String.valueOf(rs.getString("gpa"));
                String ET=String.valueOf(rs.getString("exam_type"));
                String tbData[]={id,CC,GPA,ET};
                DefaultTableModel model = (DefaultTableModel) resulttable.getModel();
                model.addRow(tbData);
            }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection=DriverManager.getConnection(url,username,password);
            Statement st=connection.createStatement();
            String s="select * from student where std_id=? and password=?";
            PreparedStatement p=connection.prepareStatement(s);
            p.setString(1,std_id.getText());
            p.setString(2,pass.getText());
            ResultSet r=p.executeQuery();
            if(r.next())
            {
                String sql="select * from session_clearance where std_id="+std_id.getText();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                String id=String.valueOf(rs.getString("std_id"));
                String LT=String.valueOf(rs.getString("level_term"));
                String SF=String.valueOf(rs.getString("session_fee"));
                String PA=String.valueOf(rs.getString("payment_amount"));
                String PS=String.valueOf(rs.getString("pay_status"));
                String D=String.valueOf(rs.getString("session_fee"));
                String tbData[]={id,LT,SF,PA,PS};
                DefaultTableModel model = (DefaultTableModel) session_clearance.getModel();
                model.addRow(tbData);
            }
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_showActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        view field=new view();
            field.setVisible(true);
            setVisible(false);
    }//GEN-LAST:event_homeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(information.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new information().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable admission;
    private javax.swing.JButton home;
    private javax.swing.JTable information;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTable resulttable;
    private javax.swing.JTable session_clearance;
    private javax.swing.JButton show;
    private javax.swing.JTextField std_id;
    // End of variables declaration//GEN-END:variables
}
